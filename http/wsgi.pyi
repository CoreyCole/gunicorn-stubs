# Stubs for gunicorn.http.wsgi (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import io
from ._sendfile import sendfile
from typing import Any, Optional

BLKSIZE: int
HEADER_VALUE_RE: Any
log: Any

class FileWrapper:
    filelike: Any = ...
    blksize: Any = ...
    close: Any = ...
    def __init__(self, filelike: Any, blksize: int = ...) -> None: ...
    def __getitem__(self, key: Any): ...

class WSGIErrorsWrapper(io.RawIOBase):
    streams: Any = ...
    def __init__(self, cfg: Any) -> None: ...
    def write(self, data: Any) -> None: ...

def base_environ(cfg: Any): ...
def default_environ(req: Any, sock: Any, cfg: Any): ...
def proxy_environ(req: Any): ...
def create(req: Any, sock: Any, client: Any, server: Any, cfg: Any): ...

class Response:
    req: Any = ...
    sock: Any = ...
    version: Any = ...
    status: Any = ...
    chunked: bool = ...
    must_close: bool = ...
    headers: Any = ...
    headers_sent: bool = ...
    response_length: Any = ...
    sent: int = ...
    upgrade: bool = ...
    cfg: Any = ...
    def __init__(self, req: Any, sock: Any, cfg: Any) -> None: ...
    def force_close(self) -> None: ...
    def should_close(self): ...
    status_code: Any = ...
    def start_response(self, status: Any, headers: Any, exc_info: Optional[Any] = ...): ...
    def process_headers(self, headers: Any) -> None: ...
    def is_chunked(self): ...
    def default_headers(self): ...
    def send_headers(self): ...
    def write(self, arg: Any): ...
    def can_sendfile(self): ...
    def sendfile(self, respiter: Any): ...
    def write_file(self, respiter: Any) -> None: ...
    def close(self) -> None: ...
